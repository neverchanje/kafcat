# The way this works is the following:
#
# The create-release job runs purely to initialize the GitHub release itself
# and to output upload_url for the following job.
#
# The build-release job runs only once create-release is finished. It gets the
# release upload URL from create-release job outputs, then builds the release
# executables for each supported platform and attaches them as release assets
# to the previously created release.
#
# The key here is that we create the release only once.
#
# Reference:
# https://eugene-babichenko.github.io/blog/2020/05/09/github-actions-cross-platform-auto-releases/

name: release
on:
  push:
    # Enable when testing release infrastructure on a branch.
    branches:
    - release-test
    tags:
    - "[0-9]+.[0-9]+.[0-9]+"
jobs:
  create-release:
    name: create-release
    runs-on: ubuntu-latest
    # env:
      # Set to force version number, e.g., when no tag exists.
      # REL_VERSION: TEST-0.0.0
    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}
      rel_version: ${{ env.REL_VERSION }}
    steps:
      - name: Get the release version from the tag
        shell: bash
        if: env.REL_VERSION == ''
        run: |
          # Apparently, this is the right way to get a tag name. Really?
          #
          # See: https://github.community/t5/GitHub-Actions/How-to-get-just-the-tag-name/m-p/32167/highlight/true#M1027
          echo "REL_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "version is: ${{ env.REL_VERSION }}"
      - name: Create GitHub release
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.REL_VERSION }}
          release_name: ${{ env.REL_VERSION }}

  build-release:
    name: build-release
    needs: ['create-release']
    runs-on: ${{ matrix.os }}
    env:
      # Emit backtraces on panics.
      RUST_BACKTRACE: 1
    strategy:
      matrix:
        build: [linux, macos]
        include:
        - build: linux
          os: ubuntu-18.04
          target: x86_64-unknown-linux-gnu
        - build: macos
          os: macos-latest
          target: x86_64-apple-darwin

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true
        target: ${{ matrix.target }}

    - name: Use Cross
      shell: bash
      run: |
        cargo install cross
        echo "TARGET_DIR=./target/${{ matrix.target }}" >> $GITHUB_ENV

    - name: Show command used for Cargo
      run: |
        echo "target dir is: ${{ env.TARGET_DIR }}"

    - name: Build release binary
      run: cross build --verbose --release --target ${{ matrix.target }}

    - name: Strip release binary (linux and macos)
      if: matrix.build == 'linux' || matrix.build == 'macos'
      run: strip "target/${{ matrix.target }}/release/kafcat"

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          target/${{ matrix.target }}/release/kafcat
          README.md
          LICENSE
